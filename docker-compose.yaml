# Drupal with PostgreSQL
#
# Access via "http://localhost:8080"
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

services:

#================================================================================================
# APACHE2
#================================================================================================
  apache2:
    image: drupal:10-apache
    restart: always
    build:
      context: .
      args:
        - PHP_UPSTREAM_CONTAINER=php-fpm
        - PHP_UPSTREAM_PORT=9000
        - PHP_UPSTREAM_TIMEOUT=60
        - DOCUMENT_ROOT=/var/www/html
    links:
      - workspace-phpfpm
    ports:
      - "8105:80"
      - "8106:443"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./log/apache2:/var/log/apache2                          # volume for config
      - ./data/drupal:/var/www/html                             # volume for data
      - ./data/drupal/sites:/var/www/html/sites
      - ./data/drupal/modules:/var/www/html/modules
      - ./data/drupal/profiles:/var/www/html/profiles
      - ./data/drupal/themes:/var/www/html/themes
    environment:
      - APACHE_VERSION=2.4

#================================================================================================
# DRUPAL-8
#================================================================================================
# Creates multiple Drupal web apps sharing the same MySQL database
# Usage: docker-compose up -d
version: '2'
services:
  drupal:
    build:
      context: ./builds/drupal-apache
    image: drupal:8.2.3-apache
    volumes:
      - /var/www/html
      - ./scripts/php.ini:/usr/local/etc/php/php.ini
      #- ./scripts/settings.php:/var/www/html/sites/default/settings.php
      - ./scripts:/scripts
      #- ./modules/:/var/www/html/modules
      #- ./themes/:/var/www/html/themes
      #- ./libraries/:/var/www/html/libraries
      #- ./profiles/:/var/www/html/profiles
      #- $(which drush):/usr/local/bin/drush
      #- $(which drupal):/usr/local/bin/drupal
    volumes_from:
      - mysql
    ports:
      - "8082:80"
    links:
      - mysql
      - phpmyadmin
    container_name: drupal_8082
  drupal_slave:
    image: drupal:8.2.3-apache
    volumes_from:
      - drupal
      - mysql
    ports:
      - "80"
    links:
      - mysql
  mysql:
    image: mysql:8
    container_name: mysql
    hostname: localhost
    volumes:
      - /var/lib/mysql
      - /usr/bin
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=drupal
      - MYSQL_USER=drupal
      - MYSQL_PASSWORD=drupal
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_8090
    environment:
      - PMA_ARBITRARY=1
    ports:
      - '8090:80'
    links:
      - mysql

#================================================================================================
# WORKSPACE PHP-FPM
#================================================================================================
  workspace-phpfpm:
    restart: always
    image: dockerframework/workspace-phpfpm:latest
    ports:
      - "8901:80"
      - "8902:9090"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.conf                       # config path
      - ./config/php/php.ini:/usr/local/etc/php/php.ini                             # ini path
      - ./config/php/laradock-php-ext-xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini    # xdebug config
      - ./log/phpfpm:/var/log/phpfpm                                                # log phpfpm
      - ./vendor/composer.phar:/usr/local/bin/composer                              # vendor composer
      - ./vendor/deployer.phar:/usr/local/bin/dep                                   # vendor deployer
      - ./vendor/php-cs-fixer:/usr/local/bin/php-cs-fixer                           # vendor php-cs-fixer
      - ./data/drupal:/var/www/html                                                 # volume for data
    environment:
      - NODE_VERSION=10.0.0
      - YARN_VERSION=1.6.0

#================================================================================================
# POSTGRES
#================================================================================================
  postgres:
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: example
    restart: always

volumes:
  modules:
  profiles:
  themes:


